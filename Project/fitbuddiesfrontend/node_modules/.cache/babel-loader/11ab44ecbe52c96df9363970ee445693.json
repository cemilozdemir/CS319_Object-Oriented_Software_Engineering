{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merto\\\\Desktop\\\\FitBuddies-main\\\\fitbuddiesfrontend\\\\src\\\\components\\\\MakeReservation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userRegister } from \"../store/actions/login.actions.js\";\nimport { bringSportActivityTimes, reserve } from \"../store/actions/reservation.actions.js\";\nimport ReactPhoneInput from \"react-phone-input-material-ui\";\nimport { useNavigate } from \"react-router-dom\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { CardActionArea } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Stack from \"@mui/material/Stack\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Check from \"@mui/icons-material/Check\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\nimport VideoLabelIcon from \"@mui/icons-material/VideoLabel\";\nimport StepConnector, { stepConnectorClasses } from \"@mui/material/StepConnector\";\nimport SportsHallCard from \"./MakeReservation/SportsHallCard\";\nimport * as SportHalls from \"../constants/SportHallsConstants\";\nimport * as SportActivities from \"../constants/SportActivityConstants\";\nimport { SportActivityImages } from \"../images/SportActivityImages\";\nimport { SportHallsImages } from \"../images/SportHallsImages\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Slide from \"@mui/material/Slide\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst steps = [\"Sport Center\", \"Sport Activity\", \"Reservation Date\"];\nconst ColorlibConnector = styled(StepConnector)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n      top: 22\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\n      }\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\n      }\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n      height: 3,\n      border: 0,\n      backgroundColor: theme.palette.mode === \"dark\" ? theme.palette.grey[800] : \"#eaeaf0\",\n      borderRadius: 1\n    }\n  };\n});\n_c = ColorlibConnector;\nconst ColorlibStepIconRoot = styled(\"div\")(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return {\n    backgroundColor: theme.palette.mode === \"dark\" ? theme.palette.grey[700] : \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...(ownerState.active && {\n      backgroundImage: \"linear-gradient( 136deg, rgb(150,113,255) 0%, rgb(100,113,255) 50%, rgb(50,113,255) 100%)\",\n      boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\"\n    }),\n    ...(ownerState.completed && {\n      backgroundImage: \"linear-gradient( 136deg, rgb(150,113,255) 0%, rgb(100,113,255) 50%, rgb(50,113,255) 100%)\"\n    })\n  };\n});\n_c2 = ColorlibStepIconRoot;\n\nfunction ColorlibStepIcon(props) {\n  const {\n    active,\n    completed,\n    className\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this),\n    2: /*#__PURE__*/_jsxDEV(GroupAddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this),\n    3: /*#__PURE__*/_jsxDEV(VideoLabelIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(ColorlibStepIconRoot, {\n    ownerState: {\n      completed,\n      active\n    },\n    className: className,\n    children: icons[String(props.icon)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = ColorlibStepIcon;\nconst sports_halls = [{\n  name: \"Main Sports Hall\",\n  description: \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n  id: SportHalls.MAIN_SPORTS_HALL,\n  img: SportHallsImages[SportHalls.MAIN_SPORTS_HALL],\n  opening_hour: \"08.30\",\n  closing_hour: \"22.00\",\n  session_count: 9,\n  duration: 75,\n  disinfectionDuration: 15,\n  sport_activities: [{\n    name: SportActivities.BADMINTON.name,\n    capacity: SportActivities.BADMINTON.capacity,\n    img: SportActivityImages.BADMINTON\n  }, {\n    name: SportActivities.BASKETBALL.name,\n    capacity: SportActivities.BASKETBALL.capacity,\n    img: SportActivityImages.BASKETBALL\n  }, {\n    name: SportActivities.VOLLEYBALL.name,\n    capacity: SportActivities.VOLLEYBALL.capacity,\n    img: SportActivityImages.VOLLEYBALL\n  }, {\n    name: SportActivities.GYM.name,\n    img: SportActivityImages.GYM,\n    capacity: 10\n  }, {\n    name: SportActivities.GROUP_EXERCICES.name,\n    capacity: SportActivities.GROUP_EXERCICES.capacity,\n    img: SportActivityImages.GROUP_EXERCICES\n  }, {\n    name: SportActivities.MULTI_PURPOSE_PROGRAM.name,\n    capacity: SportActivities.MULTI_PURPOSE_PROGRAM.capacity,\n    img: SportActivityImages.MULTI_PURPOSE_PROGRAM\n  }, {\n    name: SportActivities.TABLE_TENNIS.name,\n    capacity: SportActivities.TABLE_TENNIS.capacity,\n    img: SportActivityImages.TABLE_TENNIS\n  }]\n}, {\n  name: \"East Sports Hall\",\n  description: \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n  id: SportHalls.EAST_SPORTS_HALL,\n  img: SportHallsImages[SportHalls.EAST_SPORTS_HALL],\n  opening_hour: \"08.30\",\n  session_count: 10,\n  closing_hour: \"23.00\",\n  duration: 75,\n  disinfectionDuration: 15,\n  sport_activities: [{\n    name: SportActivities.BADMINTON.name,\n    capacity: SportActivities.BADMINTON.capacity,\n    img: SportActivityImages.BADMINTON\n  }, {\n    name: SportActivities.BASKETBALL.name,\n    capacity: SportActivities.BASKETBALL.capacity,\n    img: SportActivityImages.BASKETBALL\n  }, {\n    name: SportActivities.VOLLEYBALL.name,\n    capacity: SportActivities.VOLLEYBALL.capacity,\n    img: SportActivityImages.VOLLEYBALL\n  }, {\n    name: SportActivities.GYM.name,\n    capacity: 10,\n    img: SportActivityImages.GYM\n  }, {\n    name: SportActivities.TABLE_TENNIS.name,\n    capacity: SportActivities.TABLE_TENNIS.capacity,\n    img: SportActivityImages.TABLE_TENNIS\n  }]\n}, {\n  name: \"East Campus Open Air Facilities\",\n  description: \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n  id: SportHalls.EAST_OUTDOOR_SPORTS_FACILITIES,\n  img: SportHallsImages[SportHalls.EAST_OUTDOOR_SPORTS_FACILITIES],\n  opening_hour: \"08.30\",\n  closing_hour: \"23.00\",\n  session_count: 9,\n  duration: 75,\n  disinfectionDuration: 15,\n  sport_activities: [{\n    name: SportActivities.OPEN_AIR_BASKETBALL.name,\n    capacity: SportActivities.OPEN_AIR_BASKETBALL.capacity,\n    img: SportActivityImages.OPEN_AIR_BASKETBALL\n  }, {\n    name: SportActivities.OPEN_AIR_VOLLEYBALL.name,\n    capacity: SportActivities.OPEN_AIR_VOLLEYBALL.capacity,\n    img: SportActivityImages.OPEN_AIR_VOLLEYBALL\n  }, {\n    name: SportActivities.MINI_FOOTBALL.name,\n    capacity: SportActivities.MINI_FOOTBALL.capacity,\n    img: SportActivityImages.MINI_FOOTBALL\n  }]\n}, {\n  name: \"Main Campus Open Air Facilities\",\n  description: \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n  id: SportHalls.MAIN_OUTDOOR_SPORTS_FACILITES,\n  img: SportHallsImages[SportHalls.MAIN_OUTDOOR_SPORTS_FACILITES],\n  opening_hour: \"08.30\",\n  session_count: 9,\n  closing_hour: \"23.00\",\n  duration: 75,\n  disinfectionDuration: 15,\n  sport_activities: [{\n    name: SportActivities.INDOOR_TENNIS.name,\n    capacity: SportActivities.INDOOR_TENNIS.capacity,\n    img: SportActivityImages.INDOOR_TENNIS\n  }, {\n    name: SportActivities.MINI_FOOTBALL.name,\n    capacity: SportActivities.MINI_FOOTBALL.capacity,\n    img: SportActivityImages.MINI_FOOTBALL\n  }, {\n    name: SportActivities.OPEN_AIR_BASKETBALL.name,\n    capacity: SportActivities.OPEN_AIR_BASKETBALL.capacity,\n    img: SportActivityImages.OPEN_AIR_BASKETBALL\n  }, {\n    name: SportActivities.OPEN_AIR_VOLLEYBALL.name,\n    capacity: SportActivities.OPEN_AIR_VOLLEYBALL.capacity,\n    img: SportActivityImages.OPEN_AIR_VOLLEYBALL\n  }, {\n    name: SportActivities.OUTDOOR_TENNIS.name,\n    capacity: SportActivities.OUTDOOR_TENNIS.capacity,\n    img: SportActivityImages.OUTDOOR_TENNIS\n  }, {\n    name: SportActivities.OLYMPIC_GRASS_FOOTBALL.name,\n    capacity: SportActivities.OLYMPIC_GRASS_FOOTBALL.capacity,\n    img: SportActivityImages.OLYMPIC_GRASS_FOOTBALL\n  }, {\n    name: SportActivities.SKATE_PARK.name,\n    capacity: SportActivities.SKATE_PARK.capacity,\n    img: SportActivityImages.SKATE_PARK\n  }, {\n    name: SportActivities.CLIMBING_WALL.name,\n    capacity: SportActivities.CLIMBING_WALL.capacity,\n    img: SportActivityImages.CLIMBING_WALL\n  }]\n}, {\n  name: \"Dormitories Sports hall\",\n  description: \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n  id: SportHalls.DORMITORIES_SPORTS_HALL,\n  img: SportHallsImages[SportHalls.DORMITORIES_SPORTS_HALL],\n  opening_hour: \"08.30\",\n  closing_hour: \"23.00\",\n  session_count: 9,\n  duration: 75,\n  disinfectionDuration: 15,\n  sport_activities: [{\n    name: SportActivities.ARCH_POLY.name,\n    capacity: SportActivities.ARCH_POLY.capacity,\n    img: SportActivityImages.ARCH_POLY\n  }, {\n    name: SportActivities.BASKETBALL.name,\n    capacity: SportActivities.BASKETBALL.capacity,\n    img: SportActivityImages.BASKETBALL\n  }, {\n    name: SportActivities.VOLLEYBALL.name,\n    capacity: SportActivities.VOLLEYBALL.capacity,\n    img: SportActivityImages.VOLLEYBALL\n  }, {\n    name: SportActivities.GYM.name,\n    img: SportActivityImages.GYM,\n    capacity: SportActivities.GYM.capacity\n  }, {\n    name: SportActivities.GROUP_EXERCICES.name,\n    capacity: SportActivities.GROUP_EXERCICES.capacity,\n    img: SportActivityImages.GROUP_EXERCICES\n  }, {\n    name: SportActivities.MARTIAL_ARTS.name,\n    capacity: SportActivities.MARTIAL_ARTS.capacity,\n    img: SportActivityImages.MARTIAL_ARTS\n  }, {\n    name: SportActivities.SQUASH.name,\n    img: SportActivityImages.SQUASH,\n    capacity: SportActivities.SQUASH.capacity\n  }, {\n    name: SportActivities.SWIMMING_POOL.name,\n    capacity: SportActivities.SWIMMING_POOL.capacity,\n    img: SportActivityImages.SWIMMING_POOL\n  }, {\n    name: SportActivities.TABLE_TENNIS.name,\n    capacity: SportActivities.TABLE_TENNIS.capacity,\n    img: SportActivityImages.TABLE_TENNIS\n  }, {\n    name: SportActivities.WALKING_RUNNING.name,\n    img: SportActivityImages.WALKING_RUNNING\n  }]\n}];\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst Transition = /*#__PURE__*/React.forwardRef(_c4 = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 12\n  }, this);\n});\n_c5 = Transition;\n\nfunction MakeReservation() {\n  _s();\n\n  const [values, setValues] = useState({\n    choosedSportCenter: {},\n    choosedSportActivity: {},\n    timeIntervals: [],\n    choosedDateAndSlot: {},\n    days: []\n  });\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClose2 = () => {\n    handleBringSportActivityTimes();\n    setOpen2(false);\n  };\n\n  const dispatch = useDispatch();\n  const sportActitiviesLeftCapacities = useSelector(state => {\n    return state.reservations.bringedSportActivitiesLeftCapacities;\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    }); // console.log(values);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //dispatch(userRegister(user, navigate));\n  };\n\n  const handleReserve = () => {\n    let data;\n    data = {\n      day: values.choosedDateAndSlot.date,\n      slot: values.choosedDateAndSlot.slot,\n      sport_activity_name: values.choosedSportActivity.name,\n      sport_center_id: values.choosedSportCenter.id,\n      student_user_id: currentUser.user_id,\n      time_interval: values.choosedDateAndSlot.timeInterval\n    };\n    console.log(data);\n    dispatch(reserve(data, navigate));\n    setOpen(false);\n    setOpen2(true);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleChooseDateAndSlot = (date, slot, timeInterval) => {\n    let tempChoosedDateAndSlot = {\n      date: date,\n      slot: slot,\n      timeInterval: timeInterval\n    };\n    setValues({ ...values,\n      [\"choosedDateAndSlot\"]: tempChoosedDateAndSlot\n    });\n  };\n\n  useEffect(() => {\n    if (Object.keys(values.choosedDateAndSlot) == 0 || values.choosedDateAndSlot === undefined) return;\n    handleClickOpen();\n  }, [values.choosedDateAndSlot]);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    if (step != 1 && values.choosedSportCenter == \"\") {} else {\n      setActiveStep(step);\n    }\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  useEffect(() => {\n    handleBringSportActivityTimes();\n  }, [values.choosedSportActivity]);\n\n  function formatDate(date) {\n    var d = date;\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    let year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  }\n\n  function formatDateDDMMYYY(date) {\n    var d = date;\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    let year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [day, month, year].join(\"/\");\n  }\n\n  function getDay(d) {\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day_index = d.getDay();\n    return days[day_index];\n  }\n\n  function setDays() {\n    let days = [];\n\n    for (let i = 0; i < 3; i++) {\n      let d = new Date(Date.now() + i * 86400000);\n      days.push({\n        date: formatDate(d),\n        dateString: getDay(d) + \" \" + formatDateDDMMYYY(d)\n      });\n    }\n\n    setValues({ ...values,\n      [\"days\"]: days\n    });\n  }\n\n  useEffect(() => {\n    if (Object.keys(values.timeIntervals) == 0 || values.timeIntervals === undefined) return;\n    setDays();\n  }, [values.timeIntervals]);\n  useEffect(() => {\n    if (Object.keys(values.days).length == 0 || values.days === undefined) {\n      return;\n    }\n\n    dispatch(bringSportActivityTimes({\n      sport_center_id: values.choosedSportCenter.id,\n      sport_activity_name: values.choosedSportActivity.name,\n      sport_activity_day: values.days,\n      slot_count: values.choosedSportCenter.session_count\n    }));\n  }, [values.days]);\n  const currentUser = useSelector(state => {\n    if (state.login.user != null) return state.login.user;\n    return null;\n  });\n  const currentState = useSelector(state => {\n    console.log(state);\n    return state;\n  });\n\n  const handleBringSportActivityTimes = () => {\n    if (Object.keys(values.choosedSportCenter).length == 0 || values.choosedSportCenter === undefined) {\n      return;\n    } // console.log(\n    //     \"handleBringSportActivityTime: \" +\n    //         values.choosedSportActivity.id +\n    //         \"   \" +\n    //         values.choosedSportCenter.name\n    // );\n\n\n    let count = 1;\n\n    let getHoursAndMinutes = time => {\n      let hour = parseInt(time.substring(0, 2));\n      let minutes = parseInt(time.substring(3, 5)); // console.log(hour, minutes);\n\n      return {\n        hour: hour,\n        minutes: minutes\n      };\n    };\n\n    let startTime = getHoursAndMinutes(values.choosedSportCenter.opening_hour);\n    let times = [];\n\n    while (count < values.choosedSportCenter.session_count + 1) {\n      // console.log(startTime);\n      let endTime = startTime;\n      times.push({\n        startTime: {\n          hour: startTime.hour,\n          minutes: startTime.minutes\n        },\n        slot: count\n      });\n      endTime.minutes += values.choosedSportCenter.duration;\n      endTime.hour += Math.floor(endTime.minutes / 60);\n      endTime.minutes = endTime.minutes % 60;\n      times[times.length - 1].endTime = {\n        hour: endTime.hour,\n        minutes: endTime.minutes\n      };\n      endTime.minutes += values.choosedSportCenter.disinfectionDuration;\n      endTime.hour += Math.floor(endTime.minutes / 60);\n      endTime.minutes = endTime.minutes % 60;\n      startTime = endTime;\n      count++;\n    }\n\n    setValues({ ...values,\n      [\"timeIntervals\"]: times\n    }); // console.log(times);\n  };\n\n  const handleChooseSportCenter = sport_hall => {\n    setValues({ ...values,\n      [\"choosedSportCenter\"]: sport_hall\n    });\n    setTimeout(() => {\n      handleNext();\n    }, 400);\n  };\n\n  const handleChooseSportActivity = sport_activity => {\n    setValues({ ...values,\n      [\"choosedSportActivity\"]: sport_activity\n    });\n    setTimeout(() => {\n      handleNext();\n    }, 400);\n  };\n\n  function zeroPad(num, places) {\n    var zero = places - num.toString().length + 1;\n    return Array(+(zero > 0 && zero)).join(\"0\") + num;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Do you approve the reservation?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: [\"You are about to reserve a\", \" \", values.choosedSportActivity.name, \" session on\", \" \", values.choosedSportCenter.name, \" between\", \" \", values.choosedDateAndSlot.timeInterval, \" on\", \" \", values.choosedDateAndSlot.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          variant: \"contained\",\n          color: \"error\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleReserve();\n          },\n          color: \"success\",\n          variant: \"contained\",\n          children: \"Reserve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open2,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose2,\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Response from server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: \"msg\" in currentState.reservations.reserveServerResponse ? currentState.reservations.reserveServerResponse.msg : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose2,\n          variant: \"contained\",\n          color: \"error\",\n          children: \"Stay here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            navigate(\"/myReservations\");\n          },\n          color: \"success\",\n          variant: \"contained\",\n          children: \"Go to my reservations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"20px\"\n        },\n        children: \"Make Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          width: \"100%\",\n          mt: 5\n        },\n        spacing: 4,\n        children: /*#__PURE__*/_jsxDEV(Stepper, {\n          alternativeLabel: true,\n          activeStep: activeStep,\n          connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 36\n          }, this),\n          children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              StepIconComponent: ColorlibStepIcon,\n              onClick: handleStep(index),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleStep(index),\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 33\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        xs: {\n          mt: 10\n        },\n        style: {\n          margin: \"auto\",\n          marginTop: \"50px\",\n          maxWidth: \"1200px\"\n        },\n        children: [activeStep == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\",\n              marginBottom: \"20px\"\n            },\n            children: \"Choose a Sport Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: sports_halls.map(sport_hall => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    value: sport_hall.id,\n                    onClick: () => {\n                      handleChooseSportCenter(sport_hall);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SportsHallCard, {\n                      style: {\n                        height: \"100%\"\n                      },\n                      name: sport_hall.name,\n                      description: sport_hall.description,\n                      img: sport_hall.img\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 807,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 49\n                  }, this)\n                }, sport_hall.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), activeStep == 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\",\n              marginBottom: \"20px\"\n            },\n            children: [\"Choosed Sport Center:\", \" \", values.choosedSportCenter.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: values.choosedSportCenter.sport_activities.map(sport_activity => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  value: sport_activity.id,\n                  onClick: () => {\n                    handleChooseSportActivity(sport_activity);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(SportsHallCard, {\n                    style: {\n                      height: \"100%\"\n                    },\n                    name: sport_activity.name,\n                    description: \"\",\n                    img: sport_activity.img\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 859,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 49\n                }, this)\n              }, sport_activity.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), activeStep == 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\",\n              marginBottom: \"20px\"\n            },\n            children: [\"Choosed Sport Center:\", \" \", values.choosedSportCenter.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                value: values.choosedSportActivity.id,\n                onClick: () => {},\n                children: /*#__PURE__*/_jsxDEV(SportsHallCard, {\n                  style: {\n                    height: \"100%\"\n                  },\n                  name: values.choosedSportActivity.name,\n                  description: \"\",\n                  img: values.choosedSportActivity.img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 905,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 37\n              }, this)\n            }, values.choosedSportActivity.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 29\n          }, this), values.timeIntervals.length == -1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                textAlign: \"center\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                margin: \"auto\",\n                mt: 10,\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                xs: {\n                  textAlign: \"center\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 37\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                textAlign: \"center\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                margin: \"auto\",\n                mt: 5,\n                mb: 5\n              },\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                sx: {\n                  minWidth: 650,\n                  maxWidth: 800,\n                  justifyContent: \"center\",\n                  textAlign: \"center\"\n                },\n                component: Paper,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  \"aria-label\": \"simple table\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 965,\n                        columnNumber: 57\n                      }, this), values.days.map(el => {\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: el.dateString\n                          }, el, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 972,\n                            columnNumber: 73\n                          }, this)\n                        }, void 0, false);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 964,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 963,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: values.timeIntervals.map((el, index) => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                          sx: {\n                            \"&:last-child td, &:last-child th\": {\n                              border: 0\n                            }\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            children: [zeroPad(el.startTime.hour, 2), \"\", \".\", \"\", zeroPad(el.startTime.minutes, 2), \" \", \"-\", \" \", zeroPad(el.endTime.hour, 2), \"\", \".\", \"\", zeroPad(el.endTime.minutes, 2)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1004,\n                            columnNumber: 73\n                          }, this), values.days.map((elDay, index2) => {\n                            return /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: /*#__PURE__*/_jsxDEV(Button, {\n                                  variant: \"contained\",\n                                  onClick: () => {\n                                    handleChooseDateAndSlot(values.days[index2].date, index + 1, zeroPad(el.startTime.hour, 2) + \".\" + zeroPad(el.startTime.minutes, 2) + \"-\" + zeroPad(el.endTime.hour, 2) + \".\" + zeroPad(el.endTime.minutes, 2));\n                                    handleClickOpen();\n                                  },\n                                  disabled: values.days[index2].date + \"#\" + (index + 1) in sportActitiviesLeftCapacities ? sportActitiviesLeftCapacities[values.days[index2].date + \"#\" + (index + 1)] >= values.choosedSportActivity.capacity : true,\n                                  children: [values.days[index2].date + \"#\" + (index + 1) in sportActitiviesLeftCapacities ? sportActitiviesLeftCapacities[values.days[index2].date + \"#\" + (index + 1)] : /*#__PURE__*/_jsxDEV(CircularProgress, {\n                                    xs: {\n                                      textAlign: \"center\"\n                                    },\n                                    size: \"14px\",\n                                    style: {\n                                      color: \"yellow\"\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1137,\n                                    columnNumber: 101\n                                  }, this), \"/\", \"\", values.choosedSportActivity.capacity]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1050,\n                                  columnNumber: 93\n                                }, this)\n                              }, elDay + index2, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1044,\n                                columnNumber: 89\n                              }, this)\n                            }, void 0, false);\n                          })]\n                        }, el.slot, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 993,\n                          columnNumber: 69\n                        }, this), \" \"]\n                      }, void 0, true);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 988,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 37\n            }, this)\n          }, void 0, false)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MakeReservation, \"shVC7GYMimQ5HEdYsWwvX6tSVM8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c6 = MakeReservation;\nexport default MakeReservation;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ColorlibConnector\");\n$RefreshReg$(_c2, \"ColorlibStepIconRoot\");\n$RefreshReg$(_c3, \"ColorlibStepIcon\");\n$RefreshReg$(_c4, \"Transition$React.forwardRef\");\n$RefreshReg$(_c5, \"Transition\");\n$RefreshReg$(_c6, \"MakeReservation\");","map":{"version":3,"sources":["C:/Users/merto/Desktop/FitBuddies-main/fitbuddiesfrontend/src/components/MakeReservation.js"],"names":["React","useState","useEffect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","useDispatch","useSelector","userRegister","bringSportActivityTimes","reserve","ReactPhoneInput","useNavigate","PersonAddIcon","AppBar","Toolbar","Menu","MenuIcon","Tooltip","MenuItem","Card","CardContent","CardMedia","CardActionArea","PropTypes","styled","Stack","Stepper","Step","StepLabel","Check","SettingsIcon","GroupAddIcon","VideoLabelIcon","StepConnector","stepConnectorClasses","SportsHallCard","SportHalls","SportActivities","SportActivityImages","SportHallsImages","CircularProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","theme","steps","ColorlibConnector","alternativeLabel","top","active","line","backgroundImage","completed","height","border","backgroundColor","palette","mode","grey","borderRadius","ColorlibStepIconRoot","ownerState","zIndex","color","width","display","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","className","icons","String","icon","sports_halls","name","description","id","MAIN_SPORTS_HALL","img","opening_hour","closing_hour","session_count","duration","disinfectionDuration","sport_activities","BADMINTON","capacity","BASKETBALL","VOLLEYBALL","GYM","GROUP_EXERCICES","MULTI_PURPOSE_PROGRAM","TABLE_TENNIS","EAST_SPORTS_HALL","EAST_OUTDOOR_SPORTS_FACILITIES","OPEN_AIR_BASKETBALL","OPEN_AIR_VOLLEYBALL","MINI_FOOTBALL","MAIN_OUTDOOR_SPORTS_FACILITES","INDOOR_TENNIS","OUTDOOR_TENNIS","OLYMPIC_GRASS_FOOTBALL","SKATE_PARK","CLIMBING_WALL","DORMITORIES_SPORTS_HALL","ARCH_POLY","MARTIAL_ARTS","SQUASH","SWIMMING_POOL","WALKING_RUNNING","createData","calories","fat","carbs","protein","Transition","forwardRef","ref","MakeReservation","values","setValues","choosedSportCenter","choosedSportActivity","timeIntervals","choosedDateAndSlot","days","open","setOpen","open2","setOpen2","handleClose","handleClose2","handleBringSportActivityTimes","dispatch","sportActitiviesLeftCapacities","state","reservations","bringedSportActivitiesLeftCapacities","handleChange","prop","event","target","value","handleSubmit","preventDefault","handleReserve","data","day","date","slot","sport_activity_name","sport_center_id","student_user_id","currentUser","user_id","time_interval","timeInterval","console","log","navigate","handleClickOpen","handleChooseDateAndSlot","tempChoosedDateAndSlot","Object","keys","undefined","activeStep","setActiveStep","setCompleted","totalSteps","length","completedSteps","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","formatDate","d","month","getMonth","getDate","year","getFullYear","join","formatDateDDMMYYY","getDay","day_index","setDays","Date","now","push","dateString","sport_activity_day","slot_count","login","user","currentState","count","getHoursAndMinutes","time","hour","parseInt","substring","minutes","startTime","times","endTime","Math","floor","handleChooseSportCenter","sport_hall","setTimeout","handleChooseSportActivity","sport_activity","zeroPad","num","places","zero","toString","Array","reserveServerResponse","msg","textAlign","marginTop","mt","map","label","index","margin","maxWidth","marginBottom","position","left","transform","mb","minWidth","el","elDay","index2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userRegister } from \"../store/actions/login.actions.js\";\nimport {\n    bringSportActivityTimes,\n    reserve,\n} from \"../store/actions/reservation.actions.js\";\nimport ReactPhoneInput from \"react-phone-input-material-ui\";\nimport { useNavigate } from \"react-router-dom\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { CardActionArea } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Stack from \"@mui/material/Stack\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Check from \"@mui/icons-material/Check\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\nimport VideoLabelIcon from \"@mui/icons-material/VideoLabel\";\nimport StepConnector, {\n    stepConnectorClasses,\n} from \"@mui/material/StepConnector\";\n\nimport SportsHallCard from \"./MakeReservation/SportsHallCard\";\nimport * as SportHalls from \"../constants/SportHallsConstants\";\nimport * as SportActivities from \"../constants/SportActivityConstants\";\nimport { SportActivityImages } from \"../images/SportActivityImages\";\nimport { SportHallsImages } from \"../images/SportHallsImages\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Slide from \"@mui/material/Slide\";\nconst theme = createTheme();\n\nconst steps = [\"Sport Center\", \"Sport Activity\", \"Reservation Date\"];\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n        top: 22,\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            backgroundImage:\n                \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n        },\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            backgroundImage:\n                \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n        },\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n        height: 3,\n        border: 0,\n        backgroundColor:\n            theme.palette.mode === \"dark\" ? theme.palette.grey[800] : \"#eaeaf0\",\n        borderRadius: 1,\n    },\n}));\n\nconst ColorlibStepIconRoot = styled(\"div\")(({ theme, ownerState }) => ({\n    backgroundColor:\n        theme.palette.mode === \"dark\" ? theme.palette.grey[700] : \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...(ownerState.active && {\n        backgroundImage:\n            \"linear-gradient( 136deg, rgb(150,113,255) 0%, rgb(100,113,255) 50%, rgb(50,113,255) 100%)\",\n        boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n    }),\n    ...(ownerState.completed && {\n        backgroundImage:\n            \"linear-gradient( 136deg, rgb(150,113,255) 0%, rgb(100,113,255) 50%, rgb(50,113,255) 100%)\",\n    }),\n}));\nfunction ColorlibStepIcon(props) {\n    const { active, completed, className } = props;\n\n    const icons = {\n        1: <SettingsIcon />,\n        2: <GroupAddIcon />,\n        3: <VideoLabelIcon />,\n    };\n\n    return (\n        <ColorlibStepIconRoot\n            ownerState={{ completed, active }}\n            className={className}\n        >\n            {icons[String(props.icon)]}\n        </ColorlibStepIconRoot>\n    );\n}\nconst sports_halls = [\n    {\n        name: \"Main Sports Hall\",\n        description:\n            \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n        id: SportHalls.MAIN_SPORTS_HALL,\n        img: SportHallsImages[SportHalls.MAIN_SPORTS_HALL],\n        opening_hour: \"08.30\",\n        closing_hour: \"22.00\",\n        session_count: 9,\n        duration: 75,\n        disinfectionDuration: 15,\n        sport_activities: [\n            {\n                name: SportActivities.BADMINTON.name,\n                capacity: SportActivities.BADMINTON.capacity,\n                img: SportActivityImages.BADMINTON,\n            },\n            {\n                name: SportActivities.BASKETBALL.name,\n                capacity: SportActivities.BASKETBALL.capacity,\n                img: SportActivityImages.BASKETBALL,\n            },\n            {\n                name: SportActivities.VOLLEYBALL.name,\n                capacity: SportActivities.VOLLEYBALL.capacity,\n                img: SportActivityImages.VOLLEYBALL,\n            },\n            {\n                name: SportActivities.GYM.name,\n                img: SportActivityImages.GYM,\n                capacity: 10,\n            },\n            {\n                name: SportActivities.GROUP_EXERCICES.name,\n                capacity: SportActivities.GROUP_EXERCICES.capacity,\n                img: SportActivityImages.GROUP_EXERCICES,\n            },\n            {\n                name: SportActivities.MULTI_PURPOSE_PROGRAM.name,\n                capacity: SportActivities.MULTI_PURPOSE_PROGRAM.capacity,\n                img: SportActivityImages.MULTI_PURPOSE_PROGRAM,\n            },\n            {\n                name: SportActivities.TABLE_TENNIS.name,\n                capacity: SportActivities.TABLE_TENNIS.capacity,\n                img: SportActivityImages.TABLE_TENNIS,\n            },\n        ],\n    },\n\n    {\n        name: \"East Sports Hall\",\n        description:\n            \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n        id: SportHalls.EAST_SPORTS_HALL,\n        img: SportHallsImages[SportHalls.EAST_SPORTS_HALL],\n        opening_hour: \"08.30\",\n        session_count: 10,\n        closing_hour: \"23.00\",\n        duration: 75,\n        disinfectionDuration: 15,\n        sport_activities: [\n            {\n                name: SportActivities.BADMINTON.name,\n                capacity: SportActivities.BADMINTON.capacity,\n                img: SportActivityImages.BADMINTON,\n            },\n            {\n                name: SportActivities.BASKETBALL.name,\n                capacity: SportActivities.BASKETBALL.capacity,\n                img: SportActivityImages.BASKETBALL,\n            },\n            {\n                name: SportActivities.VOLLEYBALL.name,\n                capacity: SportActivities.VOLLEYBALL.capacity,\n                img: SportActivityImages.VOLLEYBALL,\n            },\n            {\n                name: SportActivities.GYM.name,\n                capacity: 10,\n                img: SportActivityImages.GYM,\n            },\n            {\n                name: SportActivities.TABLE_TENNIS.name,\n                capacity: SportActivities.TABLE_TENNIS.capacity,\n                img: SportActivityImages.TABLE_TENNIS,\n            },\n        ],\n    },\n    {\n        name: \"East Campus Open Air Facilities\",\n        description:\n            \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n        id: SportHalls.EAST_OUTDOOR_SPORTS_FACILITIES,\n        img: SportHallsImages[SportHalls.EAST_OUTDOOR_SPORTS_FACILITIES],\n        opening_hour: \"08.30\",\n        closing_hour: \"23.00\",\n        session_count: 9,\n        duration: 75,\n        disinfectionDuration: 15,\n        sport_activities: [\n            {\n                name: SportActivities.OPEN_AIR_BASKETBALL.name,\n                capacity: SportActivities.OPEN_AIR_BASKETBALL.capacity,\n                img: SportActivityImages.OPEN_AIR_BASKETBALL,\n            },\n            {\n                name: SportActivities.OPEN_AIR_VOLLEYBALL.name,\n                capacity: SportActivities.OPEN_AIR_VOLLEYBALL.capacity,\n                img: SportActivityImages.OPEN_AIR_VOLLEYBALL,\n            },\n            {\n                name: SportActivities.MINI_FOOTBALL.name,\n                capacity: SportActivities.MINI_FOOTBALL.capacity,\n                img: SportActivityImages.MINI_FOOTBALL,\n            },\n        ],\n    },\n    {\n        name: \"Main Campus Open Air Facilities\",\n        description:\n            \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n        id: SportHalls.MAIN_OUTDOOR_SPORTS_FACILITES,\n        img: SportHallsImages[SportHalls.MAIN_OUTDOOR_SPORTS_FACILITES],\n        opening_hour: \"08.30\",\n        session_count: 9,\n        closing_hour: \"23.00\",\n        duration: 75,\n        disinfectionDuration: 15,\n        sport_activities: [\n            {\n                name: SportActivities.INDOOR_TENNIS.name,\n                capacity: SportActivities.INDOOR_TENNIS.capacity,\n                img: SportActivityImages.INDOOR_TENNIS,\n            },\n            {\n                name: SportActivities.MINI_FOOTBALL.name,\n                capacity: SportActivities.MINI_FOOTBALL.capacity,\n                img: SportActivityImages.MINI_FOOTBALL,\n            },\n            {\n                name: SportActivities.OPEN_AIR_BASKETBALL.name,\n                capacity: SportActivities.OPEN_AIR_BASKETBALL.capacity,\n                img: SportActivityImages.OPEN_AIR_BASKETBALL,\n            },\n            {\n                name: SportActivities.OPEN_AIR_VOLLEYBALL.name,\n                capacity: SportActivities.OPEN_AIR_VOLLEYBALL.capacity,\n                img: SportActivityImages.OPEN_AIR_VOLLEYBALL,\n            },\n            {\n                name: SportActivities.OUTDOOR_TENNIS.name,\n                capacity: SportActivities.OUTDOOR_TENNIS.capacity,\n                img: SportActivityImages.OUTDOOR_TENNIS,\n            },\n            {\n                name: SportActivities.OLYMPIC_GRASS_FOOTBALL.name,\n                capacity: SportActivities.OLYMPIC_GRASS_FOOTBALL.capacity,\n                img: SportActivityImages.OLYMPIC_GRASS_FOOTBALL,\n            },\n            {\n                name: SportActivities.SKATE_PARK.name,\n                capacity: SportActivities.SKATE_PARK.capacity,\n                img: SportActivityImages.SKATE_PARK,\n            },\n            {\n                name: SportActivities.CLIMBING_WALL.name,\n                capacity: SportActivities.CLIMBING_WALL.capacity,\n                img: SportActivityImages.CLIMBING_WALL,\n            },\n        ],\n    },\n    {\n        name: \"Dormitories Sports hall\",\n        description:\n            \" Lorem ipsum, dolor sit amet consectetur adipisicing elit.\",\n        id: SportHalls.DORMITORIES_SPORTS_HALL,\n        img: SportHallsImages[SportHalls.DORMITORIES_SPORTS_HALL],\n        opening_hour: \"08.30\",\n        closing_hour: \"23.00\",\n        session_count: 9,\n        duration: 75,\n        disinfectionDuration: 15,\n        sport_activities: [\n            {\n                name: SportActivities.ARCH_POLY.name,\n                capacity: SportActivities.ARCH_POLY.capacity,\n                img: SportActivityImages.ARCH_POLY,\n            },\n            {\n                name: SportActivities.BASKETBALL.name,\n                capacity: SportActivities.BASKETBALL.capacity,\n                img: SportActivityImages.BASKETBALL,\n            },\n            {\n                name: SportActivities.VOLLEYBALL.name,\n                capacity: SportActivities.VOLLEYBALL.capacity,\n                img: SportActivityImages.VOLLEYBALL,\n            },\n            {\n                name: SportActivities.GYM.name,\n                img: SportActivityImages.GYM,\n                capacity: SportActivities.GYM.capacity,\n            },\n            {\n                name: SportActivities.GROUP_EXERCICES.name,\n                capacity: SportActivities.GROUP_EXERCICES.capacity,\n                img: SportActivityImages.GROUP_EXERCICES,\n            },\n            {\n                name: SportActivities.MARTIAL_ARTS.name,\n                capacity: SportActivities.MARTIAL_ARTS.capacity,\n                img: SportActivityImages.MARTIAL_ARTS,\n            },\n            {\n                name: SportActivities.SQUASH.name,\n                img: SportActivityImages.SQUASH,\n                capacity: SportActivities.SQUASH.capacity,\n            },\n            {\n                name: SportActivities.SWIMMING_POOL.name,\n                capacity: SportActivities.SWIMMING_POOL.capacity,\n                img: SportActivityImages.SWIMMING_POOL,\n            },\n            {\n                name: SportActivities.TABLE_TENNIS.name,\n                capacity: SportActivities.TABLE_TENNIS.capacity,\n                img: SportActivityImages.TABLE_TENNIS,\n            },\n            {\n                name: SportActivities.WALKING_RUNNING.name,\n                img: SportActivityImages.WALKING_RUNNING,\n            },\n        ],\n    },\n];\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction MakeReservation() {\n    const [values, setValues] = useState({\n        choosedSportCenter: {},\n        choosedSportActivity: {},\n        timeIntervals: [],\n        choosedDateAndSlot: {},\n        days: [],\n    });\n    const [open, setOpen] = React.useState(false);\n    const [open2, setOpen2] = React.useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClose2 = () => {\n        handleBringSportActivityTimes();\n        setOpen2(false);\n    };\n   \n    const dispatch = useDispatch();\n\n    const sportActitiviesLeftCapacities = useSelector((state) => {\n        return state.reservations.bringedSportActivitiesLeftCapacities;\n    });\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n        // console.log(values);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //dispatch(userRegister(user, navigate));\n    };\n\n    const handleReserve = () => {\n        let data;\n        data = {\n            day: values.choosedDateAndSlot.date,\n            slot: values.choosedDateAndSlot.slot,\n            sport_activity_name: values.choosedSportActivity.name,\n            sport_center_id: values.choosedSportCenter.id,\n            student_user_id: currentUser.user_id,\n            time_interval: values.choosedDateAndSlot.timeInterval,\n        };\n        console.log(data);\n        dispatch(reserve(data, navigate));\n        setOpen(false);\n        setOpen2(true);\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleChooseDateAndSlot = (date, slot, timeInterval) => {\n        let tempChoosedDateAndSlot = {\n            date: date,\n            slot: slot,\n            timeInterval: timeInterval,\n        };\n        setValues({\n            ...values,\n            [\"choosedDateAndSlot\"]: tempChoosedDateAndSlot,\n        });\n    };\n\n    useEffect(() => {\n        if (\n            Object.keys(values.choosedDateAndSlot) == 0 ||\n            values.choosedDateAndSlot === undefined\n        )\n            return;\n        handleClickOpen();\n    }, [values.choosedDateAndSlot]);\n\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [completed, setCompleted] = React.useState({});\n    const totalSteps = () => {\n        return steps.length;\n    };\n\n    const completedSteps = () => {\n        return Object.keys(completed).length;\n    };\n\n    const isLastStep = () => {\n        return activeStep === totalSteps() - 1;\n    };\n\n    const allStepsCompleted = () => {\n        return completedSteps() === totalSteps();\n    };\n\n    const handleNext = () => {\n        const newActiveStep =\n            isLastStep() && !allStepsCompleted()\n                ? // It's the last step, but not all steps have been completed,\n                  // find the first step that has been completed\n                  steps.findIndex((step, i) => !(i in completed))\n                : activeStep + 1;\n        setActiveStep(newActiveStep);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStep = (step) => () => {\n        if (step != 1 && values.choosedSportCenter == \"\") {\n        } else {\n            setActiveStep(step);\n        }\n    };\n\n    const handleComplete = () => {\n        const newCompleted = completed;\n        newCompleted[activeStep] = true;\n        setCompleted(newCompleted);\n        handleNext();\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n        setCompleted({});\n    };\n\n    useEffect(() => {\n        handleBringSportActivityTimes();\n    }, [values.choosedSportActivity]);\n\n    function formatDate(date) {\n        var d = date;\n        let month = \"\" + (d.getMonth() + 1);\n        let day = \"\" + d.getDate();\n        let year = d.getFullYear();\n\n        if (month.length < 2) month = \"0\" + month;\n        if (day.length < 2) day = \"0\" + day;\n\n        return [year, month, day].join(\"-\");\n    }\n\n    function formatDateDDMMYYY(date) {\n        var d = date;\n        let month = \"\" + (d.getMonth() + 1);\n        let day = \"\" + d.getDate();\n        let year = d.getFullYear();\n\n        if (month.length < 2) month = \"0\" + month;\n        if (day.length < 2) day = \"0\" + day;\n\n        return [day, month, year].join(\"/\");\n    }\n\n    function getDay(d) {\n        let days = [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ];\n        let day_index = d.getDay();\n        return days[day_index];\n    }\n    function setDays() {\n        let days = [];\n        for (let i = 0; i < 3; i++) {\n            let d = new Date(Date.now() + i * 86400000);\n            days.push({\n                date: formatDate(d),\n                dateString: getDay(d) + \" \" + formatDateDDMMYYY(d),\n            });\n        }\n        setValues({ ...values, [\"days\"]: days });\n    }\n    useEffect(() => {\n        if (\n            Object.keys(values.timeIntervals) == 0 ||\n            values.timeIntervals === undefined\n        )\n            return;\n        setDays();\n    }, [values.timeIntervals]);\n\n    useEffect(() => {\n        if (Object.keys(values.days).length == 0 || values.days === undefined) {\n            return;\n        }\n        dispatch(\n            bringSportActivityTimes({\n                sport_center_id: values.choosedSportCenter.id,\n                sport_activity_name: values.choosedSportActivity.name,\n                sport_activity_day: values.days,\n                slot_count: values.choosedSportCenter.session_count,\n            })\n        );\n    }, [values.days]);\n\n    const currentUser = useSelector((state) => {\n        if (state.login.user != null) return state.login.user;\n        return null;\n    });\n\n    const currentState = useSelector((state) => {\n        console.log(state);\n        return state;\n    });\n\n    const handleBringSportActivityTimes = () => {\n        if (\n            Object.keys(values.choosedSportCenter).length == 0 ||\n            values.choosedSportCenter === undefined\n        ) {\n            return;\n        }\n        // console.log(\n        //     \"handleBringSportActivityTime: \" +\n        //         values.choosedSportActivity.id +\n        //         \"   \" +\n        //         values.choosedSportCenter.name\n        // );\n\n        let count = 1;\n        let getHoursAndMinutes = (time) => {\n            let hour = parseInt(time.substring(0, 2));\n            let minutes = parseInt(time.substring(3, 5));\n            // console.log(hour, minutes);\n            return { hour: hour, minutes: minutes };\n        };\n        let startTime = getHoursAndMinutes(\n            values.choosedSportCenter.opening_hour\n        );\n        let times = [];\n        while (count < values.choosedSportCenter.session_count + 1) {\n            // console.log(startTime);\n            let endTime = startTime;\n            times.push({\n                startTime: {\n                    hour: startTime.hour,\n                    minutes: startTime.minutes,\n                },\n                slot: count,\n            });\n            endTime.minutes += values.choosedSportCenter.duration;\n            endTime.hour += Math.floor(endTime.minutes / 60);\n            endTime.minutes = endTime.minutes % 60;\n            times[times.length - 1].endTime = {\n                hour: endTime.hour,\n                minutes: endTime.minutes,\n            };\n            endTime.minutes += values.choosedSportCenter.disinfectionDuration;\n            endTime.hour += Math.floor(endTime.minutes / 60);\n            endTime.minutes = endTime.minutes % 60;\n            startTime = endTime;\n\n            count++;\n        }\n        setValues({ ...values, [\"timeIntervals\"]: times });\n        // console.log(times);\n    };\n    const handleChooseSportCenter = (sport_hall) => {\n        setValues({ ...values, [\"choosedSportCenter\"]: sport_hall });\n        setTimeout(() => {\n            handleNext();\n        }, 400);\n    };\n    const handleChooseSportActivity = (sport_activity) => {\n        setValues({ ...values, [\"choosedSportActivity\"]: sport_activity });\n        setTimeout(() => {\n            handleNext();\n        }, 400);\n    };\n    function zeroPad(num, places) {\n        var zero = places - num.toString().length + 1;\n        return Array(+(zero > 0 && zero)).join(\"0\") + num;\n    }\n    return (\n        <>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>{\"Do you approve the reservation?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        You are about to reserve a{\" \"}\n                        {values.choosedSportActivity.name} session on{\" \"}\n                        {values.choosedSportCenter.name} between{\" \"}\n                        {values.choosedDateAndSlot.timeInterval} on{\" \"}\n                        {values.choosedDateAndSlot.date}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleClose}\n                        variant=\"contained\"\n                        color=\"error\"\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            handleReserve();\n                        }}\n                        color=\"success\"\n                        variant=\"contained\"\n                    >\n                        Reserve\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={open2}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose2}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>{\"Response from server\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {\"msg\" in\n                        currentState.reservations.reserveServerResponse ? (\n                            currentState.reservations.reserveServerResponse.msg\n                        ) : (\n                            <CircularProgress />\n                        )}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleClose2}\n                        variant=\"contained\"\n                        color=\"error\"\n                    >\n                        Stay here\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            navigate(\"/myReservations\");\n                        }}\n                        color=\"success\"\n                        variant=\"contained\"\n                    >\n                        Go to my reservations\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <ThemeProvider theme={theme}>\n                <h1 style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                    Make Reservation\n                </h1>\n                <Stack sx={{ width: \"100%\", mt: 5 }} spacing={4}>\n                    <Stepper\n                        alternativeLabel\n                        activeStep={activeStep}\n                        connector={<ColorlibConnector />}\n                    >\n                        {steps.map((label, index) => (\n                            <Step key={label}>\n                                <StepLabel\n                                    StepIconComponent={ColorlibStepIcon}\n                                    onClick={handleStep(index)}\n                                >\n                                    <Button onClick={handleStep(index)}>\n                                        {label}\n                                    </Button>\n                                </StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                </Stack>\n\n                <Box\n                    xs={{ mt: 10 }}\n                    style={{\n                        margin: \"auto\",\n                        marginTop: \"50px\",\n                        maxWidth: \"1200px\",\n                    }}\n                >\n                    {activeStep == 0 ? (\n                        <>\n                            <h2\n                                style={{\n                                    textAlign: \"center\",\n                                    marginBottom: \"20px\",\n                                }}\n                            >\n                                Choose a Sport Center\n                            </h2>\n                            <Grid\n                                container\n                                spacing={4}\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                            >\n                                {sports_halls.map((sport_hall) => {\n                                    return (\n                                        <>\n                                            <Grid item key={sport_hall.name}>\n                                                <span\n                                                    value={sport_hall.id}\n                                                    onClick={() => {\n                                                        handleChooseSportCenter(\n                                                            sport_hall\n                                                        );\n                                                    }}\n                                                >\n                                                    <SportsHallCard\n                                                        style={{\n                                                            height: \"100%\",\n                                                        }}\n                                                        name={sport_hall.name}\n                                                        description={\n                                                            sport_hall.description\n                                                        }\n                                                        img={sport_hall.img}\n                                                    />\n                                                </span>\n                                            </Grid>\n                                        </>\n                                    );\n                                })}\n                            </Grid>\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                    {activeStep == 1 ? (\n                        <>\n                            <h2\n                                style={{\n                                    textAlign: \"center\",\n                                    marginBottom: \"20px\",\n                                }}\n                            >\n                                Choosed Sport Center:{\" \"}\n                                {values.choosedSportCenter.name}\n                            </h2>\n                            <Grid\n                                container\n                                spacing={4}\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                            >\n                                {values.choosedSportCenter.sport_activities.map(\n                                    (sport_activity) => {\n                                        return (\n                                            <Grid\n                                                item\n                                                key={sport_activity.name}\n                                            >\n                                                <span\n                                                    value={sport_activity.id}\n                                                    onClick={() => {\n                                                        handleChooseSportActivity(\n                                                            sport_activity\n                                                        );\n                                                    }}\n                                                >\n                                                    <SportsHallCard\n                                                        style={{\n                                                            height: \"100%\",\n                                                        }}\n                                                        name={\n                                                            sport_activity.name\n                                                        }\n                                                        description={\"\"}\n                                                        img={sport_activity.img}\n                                                    />\n                                                </span>\n                                            </Grid>\n                                        );\n                                    }\n                                )}\n                            </Grid>\n                        </>\n                    ) : (\n                        <></>\n                    )}\n\n                    {activeStep == 2 ? (\n                        <>\n                            <h2\n                                style={{\n                                    textAlign: \"center\",\n                                    marginBottom: \"20px\",\n                                }}\n                            >\n                                Choosed Sport Center:{\" \"}\n                                {values.choosedSportCenter.name}\n                            </h2>\n                            <Grid\n                                container\n                                spacing={4}\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                            >\n                                <Grid\n                                    item\n                                    key={values.choosedSportActivity.name}\n                                >\n                                    <span\n                                        value={values.choosedSportActivity.id}\n                                        onClick={() => {}}\n                                    >\n                                        <SportsHallCard\n                                            style={{ height: \"100%\" }}\n                                            name={\n                                                values.choosedSportActivity.name\n                                            }\n                                            description={\"\"}\n                                            img={\n                                                values.choosedSportActivity.img\n                                            }\n                                        />\n                                    </span>\n                                </Grid>\n                            </Grid>\n\n                            {values.timeIntervals.length == -1 ? (\n                                <>\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"center\",\n                                            margin: \"auto\",\n                                            mt: 10,\n                                            position: \"absolute\",\n                                            left: \"50%\",\n                                            top: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                        }}\n                                    >\n                                        <CircularProgress\n                                            xs={{ textAlign: \"center\" }}\n                                        />\n                                    </Box>\n                                </>\n                            ) : (\n                                <>\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"center\",\n                                            margin: \"auto\",\n                                            mt: 5,\n                                            mb: 5,\n                                        }}\n                                    >\n                                        <TableContainer\n                                            sx={{\n                                                minWidth: 650,\n                                                maxWidth: 800,\n                                                justifyContent: \"center\",\n                                                textAlign: \"center\",\n                                            }}\n                                            component={Paper}\n                                        >\n                                            <Table aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>\n                                                            {/* {zeroPad( el .startTime .hour, 2)} .  {zeroPad( el .startTime .minutes, 2)} - {zeroPad( el .endTime .hour, 2)} .  {zeroPad( el .endTime .minutes, 2)} */}\n                                                        </TableCell>\n                                                        {values.days.map(\n                                                            (el) => {\n                                                                return (\n                                                                    <>\n                                                                        <TableCell\n                                                                            key={\n                                                                                el\n                                                                            }\n                                                                        >\n                                                                            {/* {zeroPad( el .startTime .hour, 2)} .  {zeroPad( el .startTime .minutes, 2)} - {zeroPad( el .endTime .hour, 2)} .  {zeroPad( el .endTime .minutes, 2)} */}\n                                                                            {\n                                                                                el.dateString\n                                                                            }\n                                                                        </TableCell>\n                                                                    </>\n                                                                );\n                                                            }\n                                                        )}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {values.timeIntervals.map(\n                                                        (el, index) => {\n                                                            return (\n                                                                <>\n                                                                    <TableRow\n                                                                        key={\n                                                                            el.slot\n                                                                        }\n                                                                        sx={{\n                                                                            \"&:last-child td, &:last-child th\":\n                                                                                {\n                                                                                    border: 0,\n                                                                                },\n                                                                        }}\n                                                                    >\n                                                                        <TableCell>\n                                                                            {zeroPad(\n                                                                                el\n                                                                                    .startTime\n                                                                                    .hour,\n                                                                                2\n                                                                            )}\n                                                                            {\"\"}\n                                                                            .\n                                                                            {\"\"}\n                                                                            {zeroPad(\n                                                                                el\n                                                                                    .startTime\n                                                                                    .minutes,\n                                                                                2\n                                                                            )}{\" \"}\n                                                                            -{\" \"}\n                                                                            {zeroPad(\n                                                                                el\n                                                                                    .endTime\n                                                                                    .hour,\n                                                                                2\n                                                                            )}\n                                                                            {\"\"}\n                                                                            .\n                                                                            {\"\"}\n                                                                            {zeroPad(\n                                                                                el\n                                                                                    .endTime\n                                                                                    .minutes,\n                                                                                2\n                                                                            )}\n                                                                        </TableCell>\n                                                                        {values.days.map(\n                                                                            (\n                                                                                elDay,\n                                                                                index2\n                                                                            ) => {\n                                                                                return (\n                                                                                    <>\n                                                                                        <TableCell\n                                                                                            key={\n                                                                                                elDay +\n                                                                                                index2\n                                                                                            }\n                                                                                        >\n                                                                                            <Button\n                                                                                                variant=\"contained\"\n                                                                                                onClick={() => {\n                                                                                                    handleChooseDateAndSlot(\n                                                                                                        values\n                                                                                                            .days[\n                                                                                                            index2\n                                                                                                        ]\n                                                                                                            .date,\n                                                                                                        index +\n                                                                                                            1,\n                                                                                                        zeroPad(\n                                                                                                            el\n                                                                                                                .startTime\n                                                                                                                .hour,\n                                                                                                            2\n                                                                                                        ) +\n                                                                                                            \".\" +\n                                                                                                            zeroPad(\n                                                                                                                el\n                                                                                                                    .startTime\n                                                                                                                    .minutes,\n                                                                                                                2\n                                                                                                            ) +\n                                                                                                            \"-\" +\n                                                                                                            zeroPad(\n                                                                                                                el\n                                                                                                                    .endTime\n                                                                                                                    .hour,\n                                                                                                                2\n                                                                                                            ) +\n                                                                                                            \".\" +\n                                                                                                            zeroPad(\n                                                                                                                el\n                                                                                                                    .endTime\n                                                                                                                    .minutes,\n                                                                                                                2\n                                                                                                            )\n                                                                                                    );\n                                                                                                    handleClickOpen();\n                                                                                                }}\n                                                                                                disabled={\n                                                                                                    values\n                                                                                                        .days[\n                                                                                                        index2\n                                                                                                    ]\n                                                                                                        .date +\n                                                                                                        \"#\" +\n                                                                                                        (index +\n                                                                                                            1) in\n                                                                                                    sportActitiviesLeftCapacities\n                                                                                                        ? sportActitiviesLeftCapacities[\n                                                                                                              values\n                                                                                                                  .days[\n                                                                                                                  index2\n                                                                                                              ]\n                                                                                                                  .date +\n                                                                                                                  \"#\" +\n                                                                                                                  (index +\n                                                                                                                      1)\n                                                                                                          ] >=\n                                                                                                          values\n                                                                                                              .choosedSportActivity\n                                                                                                              .capacity\n                                                                                                        : true\n                                                                                                }\n                                                                                            >\n                                                                                                {values\n                                                                                                    .days[\n                                                                                                    index2\n                                                                                                ]\n                                                                                                    .date +\n                                                                                                    \"#\" +\n                                                                                                    (index +\n                                                                                                        1) in\n                                                                                                sportActitiviesLeftCapacities ? (\n                                                                                                    sportActitiviesLeftCapacities[\n                                                                                                        values\n                                                                                                            .days[\n                                                                                                            index2\n                                                                                                        ]\n                                                                                                            .date +\n                                                                                                            \"#\" +\n                                                                                                            (index +\n                                                                                                                1)\n                                                                                                    ]\n                                                                                                ) : (\n                                                                                                    <CircularProgress\n                                                                                                        xs={{\n                                                                                                            textAlign:\n                                                                                                                \"center\",\n                                                                                                        }}\n                                                                                                        size=\"14px\"\n                                                                                                        style={{\n                                                                                                            color: \"yellow\",\n                                                                                                        }}\n                                                                                                    />\n                                                                                                )}\n\n                                                                                                /\n                                                                                                {\n                                                                                                    \"\"\n                                                                                                }\n                                                                                                {\n                                                                                                    values\n                                                                                                        .choosedSportActivity\n                                                                                                        .capacity\n                                                                                                }\n                                                                                            </Button>\n                                                                                        </TableCell>\n                                                                                    </>\n                                                                                );\n                                                                            }\n                                                                        )}\n\n                                                                        {/* <TableCell>\n                                                                        <Button\n                                                                            variant=\"contained\"\n                                                                            onClick={\n                                                                                null\n                                                                            }\n                                                                        >\n                                                                            {values\n                                                                                .days[2]\n                                                                                .date +\n                                                                                \"#\" +\n                                                                                (index +\n                                                                                    1) in\n                                                                            sportActitiviesLeftCapacities ? (\n                                                                                sportActitiviesLeftCapacities[\n                                                                                    values\n                                                                                        .days[2]\n                                                                                        .date +\n                                                                                        \"#\" +\n                                                                                        (index +\n                                                                                            1)\n                                                                                ]\n                                                                            ) : (\n                                                                                <CircularProgress\n                                                                                    xs={{\n                                                                                        textAlign:\n                                                                                            \"center\",\n                                                                                    }}\n                                                                                    size=\"14px\"\n                                                                                    style={{\n                                                                                        color: \"yellow\",\n                                                                                    }}\n                                                                                />\n                                                                            )}\n                                                                            /\n                                                                            {\"\"}\n                                                                            {\n                                                                                values\n                                                                                    .choosedSportActivity\n                                                                                    .capacity\n                                                                            }\n                                                                        </Button>\n                                                                    </TableCell> */}\n                                                                    </TableRow>{\" \"}\n                                                                </>\n                                                            );\n                                                        }\n                                                    )}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Box>\n                                </>\n                            )}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                </Box>\n            </ThemeProvider>\n        </>\n    );\n}\n\nexport default MakeReservation;\n"]},"metadata":{},"sourceType":"module"}