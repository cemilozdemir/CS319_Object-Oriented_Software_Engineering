{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merto\\\\Desktop\\\\FitBuddies-main\\\\fitbuddiesfrontend\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userRegister } from \"../store/actions/login.actions.js\";\nimport ReactPhoneInput from \"react-phone-input-material-ui\";\nimport { useNavigate } from \"react-router-dom\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport * as Constants from \"../constants/constants\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst pages = [{\n  name: \"Make Reservation\",\n  link: \"makeReservation\"\n}, {\n  name: \"See Reservations\",\n  link: \"myReservations\"\n}, {\n  name: \"Announcements\",\n  link: \"announcements\"\n}];\nconst settings = [{\n  name: \"Profile\",\n  link: \"profile\"\n}, {\n  name: \"Logout\",\n  link: \"login\"\n}];\n\nfunction Navbar() {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    cell_phone: \"\",\n    user_id: \"\",\n    showPassword: false\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //dispatch(userRegister(user, navigate));\n  };\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const currentState = useSelector(state => {\n    return state;\n  });\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  useEffect(() => {\n    if (currentState.login.user == null) {\n      navigate(\"/login\");\n    }\n\n    if (currentState.login.user != null && currentState.login.user.user_type == Constants.SPORT_HEAD) {\n      let aw = pages.find(element => element.name == \"Make Announcements\");\n\n      if (!aw) {\n        pages.push({\n          name: \"Make Announcements\",\n          link: \"makeAnnouncements\"\n        });\n      }\n    }\n  }, [currentState.login]);\n\n  const getUserType = () => {\n    if (currentState.login.user != null) {\n      return currentState.login.user.user_type;\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: \"none\",\n                md: \"flex\"\n              }\n            },\n            children: [\"FitBuddies\", getUserType() == Constants.STUDENT ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"24px\"\n              },\n              children: [\"  \", \"student\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this) : \"\", getUserType() == Constants.ADMIN ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"24px\"\n              },\n              children: [\"  \", \" admin\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this) : \"\", getUserType() == Constants.ADMIN ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"24px\"\n              },\n              children: [\"  \", \" instructor\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this) : \"\", getUserType() == Constants.SPORT_HEAD ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"24px\"\n              },\n              children: [\"  \", \" sport head\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: \"flex\",\n                md: \"none\"\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: \"top\",\n                horizontal: \"left\"\n              },\n              open: Boolean(anchorElNav),\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: \"block\",\n                  md: \"none\"\n                }\n              },\n              children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseNavMenu,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\" + page.link,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"center\",\n                    children: page.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this)\n              }, page.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: \"flex\",\n                md: \"none\"\n              }\n            },\n            children: \"FitBuddies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: \"none\",\n                md: \"flex\"\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseNavMenu,\n              sx: {\n                my: 2,\n                color: \"white\",\n                display: \"block\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\" + page.link,\n                style: {\n                  color: \"white\"\n                },\n                children: page.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)\n            }, page.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleOpenUserMenu,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Remy Sharp\",\n                  src: \"/static/images/avatar/2.jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: \"45px\"\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: \"top\",\n                horizontal: \"right\"\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: \"top\",\n                horizontal: \"right\"\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUserMenu,\n              children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseUserMenu,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\" + setting.link,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"center\",\n                    children: setting.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this)\n              }, setting.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"mCmoIIG0mv97TYYCpHOWTp1OS1g=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/merto/Desktop/FitBuddies-main/fitbuddiesfrontend/src/components/Navbar.js"],"names":["React","useState","useEffect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","useDispatch","useSelector","userRegister","ReactPhoneInput","useNavigate","PersonAddIcon","AppBar","Toolbar","Menu","MenuIcon","Tooltip","Constants","MenuItem","theme","pages","name","link","settings","Navbar","values","setValues","email","password","cell_phone","user_id","showPassword","navigate","dispatch","handleChange","prop","event","target","value","handleSubmit","preventDefault","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleOpenNavMenu","currentTarget","handleOpenUserMenu","currentState","state","handleCloseNavMenu","handleCloseUserMenu","login","user","user_type","SPORT_HEAD","aw","find","element","push","getUserType","mr","display","xs","md","STUDENT","fontSize","ADMIN","flexGrow","vertical","horizontal","Boolean","map","page","my","color","p","mt","setting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userRegister } from \"../store/actions/login.actions.js\";\nimport ReactPhoneInput from \"react-phone-input-material-ui\";\nimport { useNavigate } from \"react-router-dom\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport * as Constants from \"../constants/constants\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst theme = createTheme();\nconst pages = [\n    { name: \"Make Reservation\", link: \"makeReservation\" },\n    { name: \"See Reservations\", link: \"myReservations\" },\n    { name: \"Announcements\", link: \"announcements\" },\n];\n\nconst settings = [\n    { name: \"Profile\", link: \"profile\" },\n    { name: \"Logout\", link: \"login\" },\n];\n\nfunction Navbar() {\n    const [values, setValues] = useState({\n        email: \"\",\n        password: \"\",\n        name: \"\",\n        cell_phone: \"\",\n        user_id: \"\",\n        showPassword: false,\n    });\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //dispatch(userRegister(user, navigate));\n    };\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const currentState = useSelector((state) => {\n        return state;\n    });\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    useEffect(() => {\n        if (currentState.login.user == null) {\n            navigate(\"/login\");\n        }\n\n        if(currentState.login.user != null && currentState.login.user.user_type == Constants.SPORT_HEAD){\n            let aw = pages.find(element => element.name == \"Make Announcements\")\n            if(!aw){\n                pages.push({ name: \"Make Announcements\", link: \"makeAnnouncements\" })\n            }\n        }\n    }, [currentState.login]);\n\n    const getUserType = () => {\n        if (currentState.login.user != null) {\n            return currentState.login.user.user_type;\n        } else {\n            return \"\";\n        }\n    };\n    return (\n        <ThemeProvider theme={theme}>\n            <AppBar position=\"static\">\n                <Container maxWidth=\"xl\">\n                    <Toolbar disableGutters>\n                        <Typography\n                            variant=\"h4\"\n                            noWrap\n                            component=\"div\"\n                            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n                        >\n                            FitBuddies\n                            {getUserType() == Constants.STUDENT ? (\n                                <span style={{ fontSize: \"24px\" }}>\n                                    {\"  \"}student\n                                </span>\n                            ) : (\n                                \"\"\n                            )}\n                            {getUserType() == Constants.ADMIN ? (\n                                <span style={{ fontSize: \"24px\" }}>\n                                    {\"  \"} admin\n                                </span>\n                            ) : (\n                                \"\"\n                            )}\n                            {getUserType() == Constants.ADMIN ? (\n                                <span style={{ fontSize: \"24px\" }}>\n                                    {\"  \"} instructor\n                                </span>\n                            ) : (\n                                \"\"\n                            )}\n                            {getUserType() == Constants.SPORT_HEAD ? (\n                                <span style={{ fontSize: \"24px\" }}>\n                                    {\"  \"} sport head\n                                </span>\n                            ) : (\n                                \"\"\n                            )}\n                        </Typography>\n\n                        <Box\n                            sx={{\n                                flexGrow: 1,\n                                display: { xs: \"flex\", md: \"none\" },\n                            }}\n                        >\n                            <IconButton\n                                size=\"large\"\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleOpenNavMenu}\n                                color=\"inherit\"\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorElNav}\n                                anchorOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\",\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"left\",\n                                }}\n                                open={Boolean(anchorElNav)}\n                                onClose={handleCloseNavMenu}\n                                sx={{\n                                    display: { xs: \"block\", md: \"none\" },\n                                }}\n                            >\n                                {pages.map((page) => (\n                                    <MenuItem\n                                        key={page.name}\n                                        onClick={handleCloseNavMenu}\n                                    >\n                                        <Link to={\"/\" + page.link}>\n                                            <Typography textAlign=\"center\">\n                                                {page.name}\n                                            </Typography>\n                                        </Link>\n                                    </MenuItem>\n                                ))}\n                            </Menu>\n                        </Box>\n                        <Typography\n                            variant=\"h6\"\n                            noWrap\n                            component=\"div\"\n                            sx={{\n                                flexGrow: 1,\n                                display: { xs: \"flex\", md: \"none\" },\n                            }}\n                        >\n                            FitBuddies\n                        </Typography>\n                        <Box\n                            sx={{\n                                flexGrow: 1,\n                                display: { xs: \"none\", md: \"flex\" },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <Button\n                                    key={page.name}\n                                    onClick={handleCloseNavMenu}\n                                    sx={{\n                                        my: 2,\n                                        color: \"white\",\n                                        display: \"block\",\n                                    }}\n                                >\n                                    <Link\n                                        to={\"/\" + page.link}\n                                        style={{ color: \"white\" }}\n                                    >\n                                        {page.name}\n                                    </Link>\n                                </Button>\n                            ))}\n                        </Box>\n\n                        <Box sx={{ flexGrow: 0 }}>\n                            <Tooltip title=\"Open settings\">\n                                <IconButton\n                                    onClick={handleOpenUserMenu}\n                                    sx={{ p: 0 }}\n                                >\n                                    <Avatar\n                                        alt=\"Remy Sharp\"\n                                        src=\"/static/images/avatar/2.jpg\"\n                                    />\n                                </IconButton>\n                            </Tooltip>\n                            <Menu\n                                sx={{ mt: \"45px\" }}\n                                id=\"menu-appbar\"\n                                anchorEl={anchorElUser}\n                                anchorOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                open={Boolean(anchorElUser)}\n                                onClose={handleCloseUserMenu}\n                            >\n                                {settings.map((setting) => (\n                                    <MenuItem\n                                        key={setting.name}\n                                        onClick={handleCloseUserMenu}\n                                    >\n                                        <Link to={\"/\" + setting.link}>\n                                            <Typography textAlign=\"center\">\n                                                {setting.name}\n                                            </Typography>\n                                        </Link>\n                                    </MenuItem>\n                                ))}\n                            </Menu>\n                        </Box>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n        </ThemeProvider>\n    );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}